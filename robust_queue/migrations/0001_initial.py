# Generated by Django 5.2 on 2025-08-10 18:10

import django.core.serializers.json
import django.db.models.deletion
import django.utils.timezone
import robust_queue.models.dispatching
import robust_queue.models.executable
import robust_queue.models.executor
import robust_queue.models.prunable
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "queue_name",
                    models.CharField(max_length=255, verbose_name="queue name"),
                ),
                (
                    "class_name",
                    models.CharField(max_length=255, verbose_name="class name"),
                ),
                ("arguments", models.JSONField(verbose_name="arguments")),
                ("priority", models.IntegerField(default=0, verbose_name="priority")),
                (
                    "django_task_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Django task ID",
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="scheduled at"
                    ),
                ),
                (
                    "finished_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="finished at"
                    ),
                ),
                (
                    "concurrency_key",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="concurrency key",
                    ),
                ),
            ],
            options={
                "verbose_name": "job",
                "verbose_name_plural": "jobs",
                "indexes": [
                    models.Index(
                        fields=["django_task_id"], name="ix_rq_jobs_on_django_task_id"
                    ),
                    models.Index(
                        fields=["class_name"], name="ix_rq_jobs_on_class_name"
                    ),
                    models.Index(
                        fields=["finished_at"], name="ix_rq_jobs_on_finished_at"
                    ),
                    models.Index(
                        fields=["queue_name", "finished_at"],
                        name="ix_rq_jobs_for_filtering",
                    ),
                    models.Index(
                        fields=["scheduled_at", "finished_at"],
                        name="ix_rq_jobs_for_alerting",
                    ),
                ],
            },
            bases=(robust_queue.models.executable.Executable, models.Model),
        ),
        migrations.CreateModel(
            name="FailedExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "error",
                    models.TextField(blank=True, null=True, verbose_name="error"),
                ),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="failed_execution",
                        to="robust_queue.job",
                        verbose_name="job",
                    ),
                ),
            ],
            options={
                "verbose_name": "failed execution",
                "verbose_name_plural": "failed executions",
            },
        ),
        migrations.CreateModel(
            name="Pause",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "queue_name",
                    models.CharField(max_length=255, verbose_name="queue name"),
                ),
            ],
            options={
                "verbose_name": "pause",
                "verbose_name_plural": "pauses",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("queue_name",), name="uq_rq_pause_queue_name"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                ("kind", models.CharField(max_length=255, verbose_name="kind")),
                (
                    "last_heartbeat_at",
                    models.DateTimeField(verbose_name="last heartbeat at"),
                ),
                ("pid", models.PositiveSmallIntegerField(verbose_name="pid")),
                (
                    "hostname",
                    models.CharField(
                        blank=True, max_length=1024, null=True, verbose_name="hostname"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                        verbose_name="metadata",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supervisees",
                        to="robust_queue.process",
                    ),
                ),
            ],
            options={
                "verbose_name": "process",
                "verbose_name_plural": "processes",
            },
            bases=(
                robust_queue.models.executor.Executor,
                robust_queue.models.prunable.Prunable,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="ClaimedExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claimed_execution",
                        to="robust_queue.job",
                        verbose_name="job",
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="claimed_executions",
                        to="robust_queue.process",
                        verbose_name="process",
                    ),
                ),
            ],
            options={
                "verbose_name": "claimed execution",
                "verbose_name_plural": "claimed executions",
            },
        ),
        migrations.CreateModel(
            name="ReadyExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "queue_name",
                    models.CharField(max_length=255, verbose_name="queue name"),
                ),
                ("priority", models.IntegerField(default=0, verbose_name="priority")),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ready_execution",
                        to="robust_queue.job",
                        verbose_name="job",
                    ),
                ),
            ],
            options={
                "verbose_name": "ready execution",
                "verbose_name_plural": "ready executions",
            },
        ),
        migrations.CreateModel(
            name="RecurringTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("key", models.CharField(max_length=255, verbose_name="key")),
                ("schedule", models.CharField(max_length=255, verbose_name="schedule")),
                (
                    "command",
                    models.CharField(
                        blank=True, max_length=2048, null=True, verbose_name="command"
                    ),
                ),
                (
                    "class_name",
                    models.CharField(max_length=255, verbose_name="class name"),
                ),
                (
                    "arguments",
                    models.JSONField(blank=True, null=True, verbose_name="arguments"),
                ),
                (
                    "queue_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="queue name"
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="priority"
                    ),
                ),
                ("static", models.BooleanField(default=False, verbose_name="static")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
            ],
            options={
                "verbose_name": "recurring task",
                "verbose_name_plural": "recurring tasks",
                "indexes": [
                    models.Index(fields=["static"], name="ix_rq_recurring_tasks_static")
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("key",), name="uq_rq_recurring_tasks_key"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="RecurringExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                ("run_at", models.DateTimeField(verbose_name="run at")),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_execution",
                        to="robust_queue.job",
                        verbose_name="job",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        db_column="task_key",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="robust_queue.recurringtask",
                        to_field="key",
                        verbose_name="recurring task",
                    ),
                ),
            ],
            options={
                "verbose_name": "recurring execution",
                "verbose_name_plural": "recurring executions",
            },
        ),
        migrations.CreateModel(
            name="ScheduledExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "queue_name",
                    models.CharField(max_length=255, verbose_name="queue name"),
                ),
                ("priority", models.IntegerField(default=0, verbose_name="priority")),
                ("scheduled_at", models.DateTimeField(verbose_name="scheduled at")),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_execution",
                        to="robust_queue.job",
                        verbose_name="job",
                    ),
                ),
            ],
            options={
                "verbose_name": "scheduled execution",
                "verbose_name_plural": "scheduled executions",
            },
            bases=(robust_queue.models.dispatching.Dispatching, models.Model),
        ),
        migrations.CreateModel(
            name="Semaphore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("key", models.CharField(max_length=255, verbose_name="key")),
                ("value", models.IntegerField(default=1, verbose_name="value")),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="expires at"
                    ),
                ),
            ],
            options={
                "verbose_name": "semaphore",
                "verbose_name_plural": "semaphores",
                "indexes": [
                    models.Index(
                        fields=["expires_at"], name="ix_rq_semaphore_expires_at"
                    ),
                    models.Index(
                        fields=["key", "value"], name="ix_rq_semaphores_key_value"
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(fields=("key",), name="uq_rq_semaphore_key")
                ],
            },
        ),
        migrations.CreateModel(
            name="BlockedExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="created at"
                    ),
                ),
                (
                    "queue_name",
                    models.CharField(max_length=255, verbose_name="queue name"),
                ),
                ("priority", models.IntegerField(default=0, verbose_name="priority")),
                (
                    "concurrency_key",
                    models.CharField(max_length=255, verbose_name="concurrency key"),
                ),
                ("expires_at", models.DateTimeField(verbose_name="expires at")),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocked_execution",
                        to="robust_queue.job",
                        verbose_name="job",
                    ),
                ),
            ],
            options={
                "verbose_name": "blocked execution",
                "verbose_name_plural": "blocked executions",
                "indexes": [
                    models.Index(
                        fields=["concurrency_key", "priority", "job"],
                        name="ix_rq_blocked_for_release",
                    ),
                    models.Index(
                        fields=["expires_at", "concurrency_key"],
                        name="ix_rq_blocked_for_maintenance",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="process",
            index=models.Index(
                fields=["last_heartbeat_at"], name="ix_rq_process_heartbeat"
            ),
        ),
        migrations.AddConstraint(
            model_name="process",
            constraint=models.UniqueConstraint(
                fields=("name", "supervisor"), name="uq_rq_process_name_supervisor"
            ),
        ),
        migrations.AddIndex(
            model_name="claimedexecution",
            index=models.Index(
                fields=["process_id", "job_id"], name="ix_rq_claimed_process_job"
            ),
        ),
        migrations.AddIndex(
            model_name="readyexecution",
            index=models.Index(fields=["priority", "job"], name="ix_rq_poll_all"),
        ),
        migrations.AddIndex(
            model_name="readyexecution",
            index=models.Index(
                fields=["queue_name", "priority", "created_at"],
                name="ix_rq_poll_for_queue",
            ),
        ),
        migrations.AddConstraint(
            model_name="recurringexecution",
            constraint=models.UniqueConstraint(
                fields=("task", "run_at"), name="uq_sq_recurring_task_run_at"
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledexecution",
            index=models.Index(
                fields=["scheduled_at", "priority", "job"], name="ix_rq_dispatch_all"
            ),
        ),
    ]
